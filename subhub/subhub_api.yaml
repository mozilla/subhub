swagger: "2.0"

info:
  title: "SubHub"
  version: "1.0"

consumes:
  - "application/json"
produces:
  - "application/json"

basePath: /v1

securityDefinitions:
  PayApiKey:
    type: apiKey
    in: header
    name: Authorization
    description: |
      Ops issued token.
      An example of the Authorization header would be:
      ```Authorization: Bearer 00secret00```
    x-apikeyInfoFunc: subhub.auth_validation.payment_auth
  SupportApiKey:
    type: apiKey
    in: header
    name: X-APP-ID
    description: |
      Sending application identifier
    x-apikeyInfoFunc: subhub.auth_validation.support_auth
parameters:
  uidParam:
    in: path
    name: uid
    type: string
    required: true
    description: User ID
  subIdParam:
    in: path
    name: sub_id
    type: string
    required: true
    description: Subscription ID
paths:
  /customer/{uid}/subscriptions:
    get:
      operationId: subhub.api.payments.subscription_status
      tags:
        - Subscriptions
      summary: List of Subscriptions
      description: Get list of subscriptions for a premium payments customer
      security:
        - PayApiKey: []
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Subscriptions'
        403:
          description: No subscriptions exist.
          schema:
            $ref: '#/definitions/Errormessage'
        404:
          description: Customer not found.
          schema:
            $ref: '#/definitions/Errormessage'
      parameters:
        - $ref: '#/parameters/uidParam'
    post:
      operationId: subhub.api.payments.subscribe_to_plan
      tags:
        - Subscriptions
      summary: Subscribe to Plan
      description: Subscribe to a Mozilla Plan
      security:
        - PayApiKey: []
      produces:
        - application/json
      responses:
        201:
          description: Subscription successful
          schema:
            $ref: '#/definitions/Subscriptions'
        400:
          description: Error - missing paramenter or plan not valid
          schema:
            $ref: '#/definitions/Errormessage'
        402:
          description: Token not valid
          schema:
            $ref: '#/definitions/Errormessage'
        409:
          description: Already subscribed
          schema:
            $ref: '#/definitions/Errormessage'
      parameters:
        - $ref: '#/parameters/uidParam'
        - in: body
          name: data
          schema:
            type: object
            required:
              - pmt_token
              - plan_id
              - email
              - orig_system
            properties:
              pmt_token:
                type: string
                description: Pay Token.
                example: tok_KPte7942xySKBKyrBu11yEpf
              plan_id:
                type: string
                description: Plan ID.
                example: firefox_pro_basic_823
              email:
                type: string
                description: Email address.
                example: user@gmail.com
              orig_system:
                type: string
                description: Originating System
                example: Firefox
  /plans:
    get:
      operationId: subhub.api.payments.list_all_plans
      tags:
        - Subscriptions
      summary: List all Stripe Plans
      description: List all plans available from subscription provider
      security:
        - PayApiKey: []
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Plans'
  /customer/{uid}/subscriptions/{sub_id}:
    delete:
      operationId: subhub.api.payments.cancel_subscription
      tags:
        - Subscriptions
      summary: Cancel a Subscription
      description: Cancel a Customers Subscription
      security:
        - PayApiKey: []
      produces:
        - application/json;
      responses:
        '201':
          description: Subscription cancellation successful.
          schema:
            type: object
            properties:
              message:
                type: string
        '400':
          description: Error - missing paramenter.
          schema:
            $ref: '#/definitions/Errormessage'
        '404':
          description: Customer does not exist or Subscription not valid.
          schema:
            $ref: '#/definitions/Errormessage'
      parameters:
        - $ref: '#/parameters/uidParam'
        - $ref: '#/parameters/subIdParam'
  /customer/{uid}:
    get:
      operationId: subhub.api.payments.customer_update
      tags:
        - Subscriptions
      summary: Customer Update
      description: Get updated customer subscription data
      security:
        - PayApiKey: []
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              payment_type:
                type: string
                enum:
                  - card
              last4:
                type: integer
                example: 4242
              exp_month:
                type: integer
                example: 8
              exp_year:
                type: integer
                example: 2020
              subscriptions:
                description: |
                  Optionally included subscriptions.
                type: array
                items:
                  $ref: '#/definitions/Subscriptions'
        400:
          description: Customer user ID does not match
          schema:
            $ref: '#/definitions/Errormessage'
        404:
          description:  Customer does not exist.
          schema:
            $ref: '#/definitions/Errormessage'
      parameters:
        - $ref: '#/parameters/uidParam'
    post:
      operationId: subhub.api.payments.update_payment_method
      tags:
        - Subscriptions
      summary: Update Payment Method
      description: Update the credit card on file for a user's account
      security:
        - PayApiKey: []
      produces:
        - application/json
      responses:
        201:
          description: Update successful.
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Error - unable to update payment method.
          schema:
            $ref: '#/definitions/Errormessage'
        404:
          description: Customer does not exist.
          schema:
            $ref: '#/definitions/Errormessage'
      parameters:
        - $ref: '#/parameters/uidParam'
        - in: body
          name: data
          schema:
            type: object
            required:
              - pmt_token
            properties:
              pmt_token:
                type: string
                description: Pay Token.
                example: tok_KPte7942xySKBKyrBu11yEpf
definitions:
  Plans:
    type: array
    items:
      type: object
      properties:
        plan_id:
          type: string
          example: pro_basic_823
        product_id:
          type: string
          example: pro_basic
        interval:
          type: string
          example: month
          enum:
            - day
            - week
            - month
            - year
        amount:
          type: integer
          example: 500
          description: A positive number in cents representing how much to charge on a recurring basis.
        currency:
          type: string
          example: usd
        nickname:
          type: string
          example: Monthly Rocket Launches
  Subscriptions:
    type: array
    items:
      type: object
      properties:
        subscription_id:
          type: string
          example: sub_abc123
        plan_id:
          type: string
          example: pro_basic_823
        nickname:
          type: string
          example: "pro_basic"
        current_period_end:
          type: number
          description: Seconds since UNIX epoch.
          example: 1557361022
        current_period_start:
          type: number
          description: Seconds since UNIX epoch.
          example: 1557361022
        end_at:
          type: number
          description: Non-null if the subscription is ending at a period in time.
          example: 1557361022
        status:
          type: string
          description: Subscription status
          example: active
  Errormessage:
    type: object
    properties:
      message:
        type: string
        example: The resource is not available
      code:
        type: number
        example: 404

